name: Check and Deploy Telegram Bot

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  check-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install sshpass
      run: sudo apt-get install sshpass

    - name: Check and manage containers
      env:
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
        PASS: ${{ secrets.PASSWORD }}
      run: |
        sshpass -p $PASS ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          echo "Checking running Docker containers..."
          sudo docker ps -a
          
          echo "Checking Docker images..."
          sudo docker images
          
          echo "Stopping and removing old telegram_proxy_bot container..."
          sudo docker stop telegram_proxy_bot || true
          sudo docker rm telegram_proxy_bot || true
          
          echo "Removing old telegram_proxy_bot image..."
          sudo docker rmi telegram_proxy_bot || true
          
          echo "Building new Docker image..."
          cd ~/telegram_proxy_bot
          sudo docker build -t telegram_proxy_bot .
          
          echo "Running new container..."
          sudo docker run -d --name telegram_proxy_bot -p 80:80 --restart always telegram_proxy_bot
          
          echo "Checking running containers after deployment..."
          sudo docker ps -a
          
          echo "Checking logs of the new container..."
          sudo docker logs telegram_proxy_bot
        EOF