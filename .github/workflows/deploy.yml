name: Deploy Telegram Bot to Server

on:
  push:
    branches:
      - main  # Измените на master, если ваша основная ветка называется master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install sshpass
      run: sudo apt-get install sshpass

    - name: Deploy to server
      env:
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
        PASS: ${{ secrets.PASSWORD }}
      run: |
        sshpass -p $PASS ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          # Обновляем пакеты и устанавливаем Docker, если его нет
          sudo apt-get update
          if ! command -v docker &> /dev/null; then
            sudo apt-get install -y docker.io
          fi
          # Создаем директорию проекта, если её нет
          mkdir -p /home/$USER/telegram_proxy_bot
          # Копируем файлы проекта на сервер
          sshpass -p $PASS scp -r ./* $USER@$HOST:/home/$USER/telegram_proxy_bot/
          # Переходим в директорию проекта
          cd /home/$USER/telegram_proxy_bot
          # Строим Docker образ
          sudo docker build -t telegram_proxy_bot .
          # Останавливаем и удаляем старый контейнер, если он есть
          sudo docker stop telegram_proxy_bot || true
          sudo docker rm telegram_proxy_bot || true
          # Запускаем новый контейнер
          sudo docker run -d --name telegram_proxy_bot -p 80:80 --restart always telegram_proxy_bot
        EOF