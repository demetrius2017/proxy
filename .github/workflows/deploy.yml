name: Deploy to Server

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to server
      env:
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
        PASS: ${{ secrets.PASSWORD }}
      run: |
        sudo apt-get update && sudo apt-get install -y sshpass
        sshpass -p $PASS ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          # Обновляем пакеты и устанавливаем Docker, если его нет
          sudo apt-get update
          sudo apt-get install -y docker.io sshpass
          sudo systemctl start docker
          sudo systemctl enable docker

          # Создаем директорию проекта, если её нет
          mkdir -p /home/$USER/youtube_proxy_bot

          # Выходим из SSH сессии, чтобы выполнить scp
        EOF

        # Копируем файлы проекта на сервер
        sshpass -p $PASS scp -r ./* $USER@$HOST:/home/$USER/youtube_proxy_bot/

        sshpass -p $PASS ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          # Переходим в директорию проекта
          cd /home/$USER/youtube_proxy_bot

          # Строим Docker образ
          sudo docker build -t youtube_proxy_bot .

          # Останавливаем и удаляем старый контейнер, если он есть
          sudo docker stop youtube_proxy_bot || true
          sudo docker rm youtube_proxy_bot || true

          # Запускаем новый контейнер
          sudo docker run -d --name youtube_proxy_bot -p 8080:8080 --restart always youtube_proxy_bot

          # Настраиваем Nginx для проксирования запросов к контейнеру
          echo "server {
              listen 80;
              server_name ${HOST};

              location / {
                  proxy_pass http://localhost:8080;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
              }
          }" | sudo tee /etc/nginx/sites-available/youtube_proxy_bot

          sudo ln -sf /etc/nginx/sites-available/youtube_proxy_bot /etc/nginx/sites-enabled/
          sudo nginx -t && sudo systemctl restart nginx
        EOF