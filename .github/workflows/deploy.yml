name: Deploy to Server

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to server
      env:
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
        PASS: ${{ secrets.PASSWORD }}
      run: |
        sudo apt-get update && sudo apt-get install -y sshpass
        sshpass -p $PASS ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          # Обновляем пакеты и устанавливаем необходимые инструменты
          sudo apt-get update
          sudo apt-get install -y docker.io sshpass net-tools

          # Создаем директорию проекта, если её нет
          mkdir -p /home/$USER/youtube_proxy_bot

          # Выходим из SSH сессии, чтобы выполнить scp
        EOF

        # Копируем файлы проекта на сервер
        sshpass -p $PASS scp -r ./* $USER@$HOST:/home/$USER/youtube_proxy_bot/

        sshpass -p $PASS ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          # Переходим в директорию проекта
          cd /home/$USER/youtube_proxy_bot

          # Заменяем placeholders в конфигурации Nginx
          sed -i "s/SERVER_NAME_PLACEHOLDER/${HOST}/g" nginx_config.conf
          sed -i "s/USER_PLACEHOLDER/${USER}/g" nginx_config.conf

          # Копируем конфигурацию Nginx
          sudo cp nginx_config.conf /etc/nginx/sites-available/youtube_proxy_bot

          # Создаем символическую ссылку
          sudo ln -sf /etc/nginx/sites-available/youtube_proxy_bot /etc/nginx/sites-enabled/

          # Проверяем конфигурацию Nginx и перезапускаем его
          sudo nginx -t && sudo systemctl restart nginx

          # Строим Docker образ
          sudo docker build -t youtube_proxy_bot .

          # Останавливаем и удаляем старый контейнер, если он есть
          sudo docker stop youtube_proxy_bot || true
          sudo docker rm youtube_proxy_bot || true

          # Запускаем новый контейнер
          sudo docker run -d --name youtube_proxy_bot -p 8080:8080 --restart always youtube_proxy_bot

          # Отладочная информация
          echo "--- Nginx status ---"
          sudo systemctl status nginx
          
          echo "--- Nginx configuration ---"
          cat /etc/nginx/sites-enabled/youtube_proxy_bot
          
          echo "--- Docker container status ---"
          sudo docker ps -a
          
          echo "--- Docker container logs ---"
          sudo docker logs youtube_proxy_bot 2>&1 | tail -n 50
          
          echo "--- Python application status ---"
          sudo docker exec youtube_proxy_bot ps aux
          
          echo "--- Check if application is listening on port 8080 ---"
          sudo docker exec youtube_proxy_bot netstat -tulpn | grep :8080
          
          echo "--- Netstat for port 8080 on host ---"
          sudo netstat -tulpn | grep :8080
        EOF