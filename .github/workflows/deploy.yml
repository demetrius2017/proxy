name: Deploy to Server

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to server
      env:
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
        PASS: ${{ secrets.PASSWORD }}
      run: |
        sudo apt-get update && sudo apt-get install -y sshpass
        sshpass -p $PASS ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          # Установка необходимых инструментов, если не установлены
          sudo apt-get update
          sudo apt-get install -y docker.io sshpass net-tools

          # Создаем директорию проекта, если её нет
          mkdir -p /home/$USER/youtube_proxy_bot
        EOF

        # Копируем файлы проекта на сервер
        sshpass -p $PASS scp -r ./* $USER@$HOST:/home/$USER/youtube_proxy_bot/

        sshpass -p $PASS ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          # Переходим в директорию проекта
          cd /home/$USER/youtube_proxy_bot

          # Проверяем и устанавливаем правильные права доступа
          sudo chown -R www-data:www-data /home/$USER/youtube_proxy_bot
          sudo chmod -R 755 /home/$USER/youtube_proxy_bot

          # Очистка старых контейнеров и образов только для вашего проекта
          echo "--- Cleaning up old Docker images and containers ---"
          sudo docker stop youtube_proxy_bot || true
          sudo docker rm youtube_proxy_bot || true
          sudo docker rmi youtube_proxy_bot || true

          # Строим Docker образ
          sudo docker build -t youtube_proxy_bot .

          # Запуск нового контейнера
          sudo docker run -d --name youtube_proxy_bot -p 8080:8080 --network host youtube_proxy_bot

          # Проверка запуска контейнера
          echo "--- Docker container status ---"
          sudo docker ps -a | grep youtube_proxy_bot

          if [ "$(sudo docker ps -a -f name=youtube_proxy_bot --format '{{.Status}}' | grep 'Up')" ]; then
            echo "Контейнер youtube_proxy_bot успешно запущен"
          else
            echo "Ошибка запуска контейнера youtube_proxy_bot"
          fi

          # Отладочная информация
          echo "--- Docker container logs ---"
          sudo docker logs youtube_proxy_bot 2>&1 | tail -n 50

          echo "--- Directory contents ---"
          ls -R /home/$USER/youtube_proxy_bot

          echo "--- Disk usage ---"
          df -h
        EOF
